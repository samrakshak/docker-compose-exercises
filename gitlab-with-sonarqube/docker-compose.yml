version: '2.2'

services:
    gitlab:
        image: 'gitlab/gitlab-ce:${GITLAB_VERSION}'
        mem_limit: 4000000000
        memswap_limit: 6000000000
        mem_reservation: 1024m
        privileged: true
        cpu_count: 2
        restart: always
        hostname: ${GITLAB_HOST_NAME}
        container_name: gitlab
        environment:
            GITLAB_OMNIBUS_CONFIG: |
                external_url 'http://${GITLAB_HOST_NAME}:${GITLAB_HOST_PORT}'
                gitlab_rails['backup_keep_time'] = ${GITLAB_BACKUP_LIFETIME}
                gitlab_rails['backup_upload_connection'] = {
                    'provider' => 'AWS',
                    'region' => '${GITLAB_AWS_REGION}',
                    'aws_access_key_id' => '${GITLAB_AWS_KEY_ID}',
                    'aws_secret_access_key' => '${GITLAB_AWS_KEY}'
                }
                gitlab_rails['backup_upload_remote_directory'] = '${GITLAB_AWS_S3_DIRECTORY}'

        ports:
            - '${GITLAB_HOST_PORT}:${GITLAB_HOST_PORT}'
            - '${GITLAB_SSH_PORT}:22'
        volumes:
            - '${GITLAB_VOLUMES_ROOT}/config:/etc/gitlab'
            - '${GITLAB_VOLUMES_ROOT}/logs:/var/log/gitlab'
            - '${GITLAB_VOLUMES_ROOT}/data:/var/opt/gitlab'
    mysql:
        image: mysql
        restart: always
        container_name: sonar-db
        environment:
            MYSQL_DATABASE: ${DB_NAME}
            MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
            MYSQL_USER: ${SONAR_USER}
            MYSQL_PASSWORD: ${SONAR_PASSWORD}

    sonarqube:
        image: sonarqube
        restart: always
        container_name: sonar-web
        links:
            - mysql:db
        environment:
            SONARQUBE_JDBC_URL: "jdbc:mysql://db/sq?useUnicode=true&characterEncoding=utf8"
            SONARQUBE_JDBC_USERNAME: ${SONAR_USER}
            SONARQUBE_JDBC_PASSWORD: ${SONAR_PASSWORD}
        ports:
            - 9000:9000
        volumes:
            - '${SONAR_VOLUMES_ROOT}:/opt/sonarqube/data'
